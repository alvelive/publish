name: 'Custom Docker Build and Push'
description: 'Build and push Docker images with caching'
inputs:
  entrypoint:
    description: 'Entry point for npm package'
    required: false
    default: 'src/index.ts'
  outdir:
    description: 'Output directory for npm package'
    required: false
    default: 'dist'
  target:
    description: 'Target platform for npm package'
    required: false
    default: 'node'
  dts-config:
    description: 'Path to dts-bundle.config.json file'
    required: false
    default: 'dts-bundle.config.json'
  npm-token:
    description: 'Access token for npm registry (GitHub PAT for GitHub Packages)'
    required: true
  registry-url:
    description: 'Registry URL for npm package'
    default: 'https://npm.pkg.github.com/'
    required: true
  publish:
    description: 'Should the action publish image to registry'
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - name: Get bun cache dir
      id: bun-cache-dir
      run: |
        echo "bun-cache-dir=$(bun pm cache)" >> $GITHUB_ENV

    - name: Cache bun build tools
      uses: actions/cache@v3
      with:
        path: ${{ env.bun-cache-dir }}
        key: ${{ runner.os }}-bun-cache

    - name: Build source and typings
      run: |
        curl -fsSL https://loremipsum.com/sasdasd/asdadasd/build.sh -o build.sh &
        curl -fsSL https://loremipsum.com/sasdasd/asdadasd/Makefile -o Makefile &
        curl -fsSL https://loremipsum.com/sasdasd/asdadasd/dts-bundle.config.json -o dts-bundle.config.json &

        wait

        export ENTRY_POINT=${{ inputs.entrypoint }}
        export OUTDIR=${{ inputs.outdir }}
        export PLATFORM=${{ inputs.target }}

        bash build.sh

    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: https://npm.pkg.github.com/

    - run: npm publish
      if: ${{ inputs.publish }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
