name: 'npm publish'
description: 'This is a simple action to publish npm packages (or GitHub Packages)'
inputs:
  entrypoint:
    description: 'Entry point for npm package'
    required: false
    default: 'src/index.ts'
  platform:
    description: 'Target platform for npm package'
    required: false
    default: 'node'
  install-scope:
    description: 'Dependency scope for npm dependencies'
    required: false
    default: '@alvelive'
  install-token:
    description: 'Access token for npm registry during installation (GitHub PAT for GitHub Packages)'
    required: false
  install-registry-url:
    description: 'Access token for npm registry during installation (GitHub PAT for GitHub Packages)'
    default: 'https://npm.pkg.github.com/'
    required: false
  publish:
    description: 'Should the action publish image to registry'
    required: false
    default: false
  npm-token:
    description: 'Access token for npm registry (GitHub PAT for GitHub Packages)'
    required: false
  registry-url:
    description: 'Registry URL for npm package'
    default: 'https://npm.pkg.github.com/'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Check input values
      env:
        # Required for building
        ENTRY_POINT: ${{ inputs.entrypoint }}
        PLATFORM: ${{ inputs.platform }}

        # Required for publishing
        NPM_TOKEN: ${{ inputs.npm-token }}
        PUBLISH: ${{ inputs.publish }}
        REGISTRY_URL: ${{ inputs.registry-url }}
      shell: bash
      run: |
        #!/bin/bash

        set -e

        err() { printf "%s\n" "$*" >&2; }

        if [ -n "$PUBLISH" ]; then
          should_exit=0

          if [ -z "$ENTRY_POINT" ]; then
            err "Error: Entry point is required for building"
            should_exit=1
          fi

          if [ -z "$PLATFORM" ]; then
            err "Error: Platform is required for building"
            should_exit=1
          fi

          if [ -z "$NPM_TOKEN" ]; then
            err "Error: NPM token is required for publishing"
            should_exit=1
          fi

          if [ -z "$REGISTRY_URL" ]; then
            err "Error: Registry URL is required for publishing"
            should_exit=1
          fi

          if [ $should_exit -eq 1 ]; then
            exit 1
          fi
        fi

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: https://npm.pkg.github.com/

    - name: Get bun cache dir
      id: bun-cache-dir
      shell: bash
      run: |
        echo "bun-cache-dir=$(bun pm cache)" >> $GITHUB_ENV

    - name: Cache bun build tools
      uses: actions/cache@v3
      with:
        path: ${{ env.bun-cache-dir }}
        key: ${{ runner.os }}-bun-cache

    - name: Download build scripts
      shell: bash
      run: wget {{base_url}}/Makefile {{base_url}}/dts-bundle.config.json

    - name: Run build script
      shell: bash
      run: |
        install_scope='${{ inputs.install-scope }}'
        install_token='${{ inputs.install-token }}'
        install_registry_url='${{ inputs.install-registry-url }}'

        if [ -n "$install_scope" ]; then
          echo "Creating bunfig.toml for private scope $install_scope"

          cat <<EOF >bunfig.toml
          # bunfig.toml
          [install.scopes]
          "$install_scope" = { token = "$install_token", url = "$install_registry_url" }
        EOF

          echo "Creating .npmrc for private scope $install_scope"
          cat <<EOF >.npmrc
          $install_scope:registry=$install_registry_url
          //npm.pkg.github.com/:_authToken=$install_token
        EOF
        else
          echo "No private scope provided for installation"
        fi

        make all

        echo "Cleaning up node auth tokens for bun and npm"
        rm -f bunfig.toml .npmrc
      env:
        PLATFORM: ${{ inputs.platform }}
        ENTRY_POINT: ${{ inputs.entrypoint }}

    - name: Publish to npm or GitHub Packages
      if: ${{ inputs.publish }}
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
      shell: bash
      run: |
        npm publish
