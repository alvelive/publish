name: 'npm publish'
description: 'This is a simple action to publish npm packages (or GitHub Packages)'
inputs:
  entrypoint:
    description: 'Entry point for npm package'
    required: false
    default: 'src/index.ts'
  platform:
    description: 'Target platform for npm package'
    required: false
    default: 'node'
  build-args:
    description: 'Additional arguments that will be passed to esbuild command'
    required: false
    default: ''
  install-scope:
    description: 'Dependency scope for npm dependencies'
    required: false
    default: '@alvelive'
  install-token:
    description: 'Access token for npm registry during installation (GitHub PAT for GitHub Packages)'
    required: false
  install-registry-url:
    description: 'Access token for npm registry during installation (GitHub PAT for GitHub Packages)'
    default: 'https://npm.pkg.github.com/'
    required: false
  publish:
    description: 'Should the action publish image to registry'
    required: false
    default: false
  npm-token:
    description: 'Access token for npm registry (GitHub PAT for GitHub Packages)'
    required: false
  registry-url:
    description: 'Registry URL for npm package'
    default: 'https://npm.pkg.github.com/'
    required: false
  force:
    description: 'Force publish to registry'
    required: false
    default: false

runs:
  using: 'composite'
  steps:
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: ${{ inputs.registry-url }}

    - name: Get bun cache dir
      id: bun-cache-dir
      shell: bash
      run: echo "bun-cache-dir=$(bun pm cache)" >> $GITHUB_ENV

    - name: Cache bun build tools
      uses: actions/cache@v3
      with:
        path: ${{ env.bun-cache-dir }}
        key: ${{ runner.os }}-bun-cache

    - name: Install build scripts
      shell: bash
      run: |
        download() {
          for file in $@; do
            if [ ! -f $file ]; then
              output="$(pwd)/$file"
              dirname="$(dirname $output)"
              mkdir -p "$dirname"
              wget "https://raw.githubusercontent.com/alvelive/publish/3e65b0bedc9271632a395769b7299bd4f5e322d7/$file" -O "$output" &
            fi
          done
        }

        download Makefile dts-bundle.config.json action/check-env.ts action/npmrc.ts action/update-dts-config.ts action/clean-package-json.ts
        wait

    - name: Check input variables
      shell: bash
      env:
        PUBLISH: ${{ inputs.publish }}
        BUILD_ARGS: ${{ inputs.build-args }}
        ENTRY_POINT: ${{ inputs.entrypoint }}
        PLATFORM: ${{ inputs.platform }}
        NPM_TOKEN: ${{ inputs.npm-token }}
        REGISTRY_URL: ${{ inputs.registry-url }}
      run: bun run action/check-env.ts

    - name: Create .npmrc file
      shell: bash
      env:
        INSTALL_SCOPE: '${{ inputs.install-scope }}'
        INSTALL_TOKEN: '${{ inputs.install-token || inputs.npm-token }}'
        INSTALL_REGISTRY_URL: '${{ inputs.install-registry-url || inputs.registry-url }}'
      run: bun run action/npmrc.ts

    - name: Build source
      shell: bash
      env:
        PLATFORM: ${{ inputs.platform }}
        ENTRY_POINT: ${{ inputs.entrypoint }}
      run: make all

    - name: Clear dependencies from package.json
      shell: bash
      run: bun run action/clean-package-json.ts

    - name: Unpublish the package from registry
      if: "${{ inputs.publish == 'true' && inputs.force == 'true' }}"
      shell: bash
      env:
        NODE_AUTH_TOKEN: '${{ inputs.npm-token }}'
      run: npm unpublish || exit 0

    - name: Publish to npm or GitHub Packages
      if: "${{ inputs.publish == 'true' }}"
      env:
        NODE_AUTH_TOKEN: '${{ inputs.npm-token }}'
      shell: bash
      run: npm publish
